#hero {
  min-height: 100vh;
  height: 100vh;
  display: flex;
  align-items: center;
  border-bottom: 0px;
  background: $white-color;
  font-weight: 400;
  color: $dark-blue-text;
  padding: 0rem 5.6rem;
  margin-bottom: 0;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: -1;

  // background: url('
  // https://images.unsplash.com/photo-1537429149818-2d0e3e20857b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=80
  //   ');
  // castle
  // background: url('https://i.redd.it/sn7z09eqe3n71.jpg');
  // sunset
  // background: url('https://i.ytimg.com/vi/kIRXt3Ppyzk/maxresdefault.jpg');
  // dark blue castle
  // background: url('https://images.squarespace-cdn.com/content/v1/551a19f8e4b0e8322a93850a/1648349932576-HOCUXPMWG8FVIWL355TN/Thumbnail_37.png?format=1000w');
  
  // Best
  // background: url('https://images8.alphacoders.com/939/939716.png');

  background: url('https://i.pinimg.com/originals/00/11/ac/0011ace89f00fedf690e6769290f21e3.gif');
  background-position: center;
  background-size: cover;

  @media (min-aspect-ratio: 16/9) {
    .video-foreground {
      height: 300%;
      top: -100%;
    }
  }
  @media (max-aspect-ratio: 16/9) {
    .video-foreground {
      width: 300%;
      left: -100%;
    }
  }
  @include respond(phone) {
    padding: 0rem $default-font-size;
  }

  .hero-title {
    font-size: 5.6rem;
    font-weight: 700;
    margin-bottom: 3.2rem;
    text-align: left;
    color: #fff;
    z-index: 100;
    overflow: hidden;
    
    @include respond(tab-land) {
      font-size: 4.8rem;
    }


    @include respond(tab-land) {
      font-size: 4rem;
    }
    @include respond(tab-port) {
      font-size: 3.6rem;
      text-align: center;
    }
    @include respond(phone) {
      font-size: 3.5rem;
      line-height: 1.5;
    }
    @include respond(phone-xs) {
      font-size: 2.8rem;
    }
  }

  .hero-cta {
    display: flex;

    @include respond(tab-port) {
      justify-content: center;
    }

    & a {
      font-size: 2.4rem;
      font-family: 'alagard', sans-serif;
      // -webkit-text-stroke: 2px #000;
      // -webkit-text-fill-color: white;
      // -webkit-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
      // -moz-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
      // -o-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
      // -ms-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
      // filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
      @include respond(phone) {
        font-size: 2rem;
      }
    }
  }
}

.drop-shadow-outline {
  -webkit-text-stroke: 2px #000;
    -webkit-text-fill-color: white;
    -webkit-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -moz-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -o-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -ms-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
}

.drop-shadow-outline-small {
  -webkit-text-stroke: 1px #000;
    -webkit-text-fill-color: white;
    -webkit-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -moz-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -o-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    -ms-filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
    filter: drop-shadow(0px 0px 2px rgb(248, 234, 43));
}

/* Shooting Star */


$shooting-time: 3000ms;

.night {
  position: absolute;
  width: 100vw;
  height: 100vh;
  // z-index: 100;
  transform: rotateZ(45deg);
  // perspective: 1000px;
  // perspective-origin: 50% 50%;
  
  // animation: sky 200000ms linear infinite;
}

.shooting_star {
  position: absolute;
  z-index: 100;
  left: 50%;
  top: 50%;
  rotate: 45deg;
  // width: 100px;
  height: 2px;
  background: linear-gradient(-45deg, rgba(95, 145, 255, 1), rgba(0, 0, 255, 0));
  // background: linear-gradient(-45deg, #f3dfbfad 2%, #66aaf7af 80%);
  border-radius: 999px;
  filter: drop-shadow(0 0 6px rgba(105, 155, 255, 1));
  animation:
    tail $shooting-time ease-in-out infinite,
    shooting $shooting-time ease-in-out infinite;
  
  &::before {
    content: '';
    position: absolute;
    top: calc(50% - 1px);
    right: 0;
    // width: 30px;
    height: 2px;
    // background: linear-gradient(-45deg, rgba(0, 0, 255, 0), rgba(95, 145, 255, 1), rgba(0, 0, 255, 0));
    background: linear-gradient(-45deg, #f3dfbfda 2%, #66aaf7af 80%);
    transform: translateX(50%) rotateZ(45deg);
    border-radius: 100%;
    animation: shining $shooting-time ease-in-out infinite;
  }

  &::after {
    @extend .shooting_star::before;    
    content: '';
    position: absolute;
    top: calc(50% - 1px);
    right: 0;
    // width: 30px;
    height: 2px;
    background: linear-gradient(-45deg, rgba(0, 0, 255, 0), rgba(95, 145, 255, 1), rgba(0, 0, 255, 0));
    transform: translateX(50%) rotateZ(45deg);
    border-radius: 100%;
    animation: shining $shooting-time ease-in-out infinite;
    transform: translateX(50%) rotateZ(-45deg);
  }
  
  @for $i from 1 through 20 {
    &:nth-child(#{$i}) {
      $delay: random(9999) + 0ms;
      top: calc(50% - #{random(400) - 100px});
      left: calc(50% - #{random(300) + 100px});
      animation-delay: $delay;
      opacity: random(50) / 100 + random(1);
      
      &::before,
      &::after {
        animation-delay: $delay;
      }
    }
  }
}

@keyframes tail {
  0% {
    width: 0;
  }
  
  30% {
    width: 100px;
  }
  
  100% {
    width: 0;
  }
}

@keyframes shining {
  0% {
    width: 0;
  }
  
  50% {
    width: 30px;
  }
  
  100% {
    width: 0;
  }
}

@keyframes shooting {
  0% {
    transform: translateX(0);
  }
  
  100% {
    transform: translateX(300px);
  }
}

@keyframes sky {
  0% {
    transform: rotate(45deg);
  }
  
  100% {
    transform: rotate(45 + 360deg);
  }
}


// Clouds


/* 
 * https://github.com/ltackett/lorintackett.com/blob/lorintackett.com/2020-01-clouds-and-quotes/src/components/Clouds/Clouds.jsx
 */


// Import cloud images
$whiteCloud1: "/clouds_white_1.png";
$whiteCloud2: "/clouds_white_2.png";
$whiteCloud3: "/clouds_white_3.png";

// Cloud vars
$clouds: 
($whiteCloud2 1000px 20s),
($whiteCloud1 1000px 15s),
($whiteCloud3 1579px 17s);

// Animation & keyframes
@for $i from 1 through length($clouds) {
  
  $item     : nth($clouds, $i);
  $path     : nth($item, 1);
  $width    : nth($item, 2);
  $duration : nth($item, 3);
  
  @keyframes clouds-loop-#{$i} {
    to { background-position: -$width 0; }
  }
  
  .clouds-#{$i} {
    background-image: url($path);
    animation: clouds-loop-#{$i} $duration infinite linear;
  }
}

.clouds-container {
  
  pointer-events: none;
//   position: absolute;
  overflow: hidden;
//   top:      0;
//   left:     0;
//   right:    0;
z-index: 100;
  height:   100%;
}  

.clouds-1,
.clouds-2,
.clouds-3 {
  background-repeat: repeat-x;
  position: absolute;
  opacity: 0.4;
  top:      0;
  right:    0;
  left:     0;
  height:   500px;
}

.clouds-4,
.clouds-5,
.clouds-6 {
  background-repeat: repeat-x;
  position: absolute;
  opacity: 0.4;
  bottom:      -100;
  right:    0;
  left:     0;
  height:   500px;
}

$starFieldWidth: 2560;
$starFieldHeight: 2560;
$starStartOffset: 600px;

$starOneScrollDuration: 100s;
$starTwoScrollDuration: 125s;
$starThreeScrollDuration: 175s;
$numStarOneStars: 300;
$numStarTwoStars: 200;
$numStarThreeStars: 200;
$numShootingStars: 10;
$width: 100%;

// html
//   height: 100%
//   body
//     width: 100%
//     height: 100%
//     margin: 0
// .container
//   display: block
//   position: relative
//   width: 100%
//   height: 100%
//   background: linear-gradient(to bottom, #020107 0%, #201b46 100%)
//   .text
//     color: #FFF
//     position: absolute
//     top: 50%
//     right: 50%
//     margin: -10px -75px 0 0
//     font-size: 20px
//     font-family: sans-serif
//     font-weight: bold
  
@function create-stars($n){

  $stars: "#{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";

  @for $i from 2 through $n{
    $stars: "#{$stars} , #{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";
}
  @return unquote($stars);
}

@mixin star-template($numStars, $starSize, $scrollSpeed){
  z-index: 10;
  width: $starSize;
  height: $starSize;
  border-radius: 50%;
  background: transparent;
  box-shadow: create-stars($numStars);
  animation: animStar $scrollSpeed linear infinite;
  &:after {
    content: " ";
    top: -$starStartOffset;
    width: $starSize ;
    height: $starSize;
    border-radius: 50%;
    position: absolute;
    background: transparent;
    box-shadow: create-stars($numStars);
    }
  }
@mixin shooting-star-template($numStars, $starSize, $speed){
  z-index: 10;
  width: $starSize;
  height: $starSize + 80px;
  border-top-left-radius: 50%;
  border-top-right-radius: 50%;
  position: absolute;
  rotate: -95deg;
  bottom: 0;
  right: 0;
  background: linear-gradient(to top, rgba(255,255,255,0), rgba(255,255,255,1));
  animation: animShootingStar $speed linear infinite;
  }
.nightstars {
  @include star-template($numStarOneStars, 1px, $starOneScrollDuration);
}
.nightstars1 {
  @include star-template($numStarTwoStars, 2px, $starTwoScrollDuration);
}
.nightstars2 {
  @include star-template($numStarThreeStars, 3px, $starThreeScrollDuration);
}
.nightshooting-stars{
  @include shooting-star-template($numShootingStars, 5px, 10s);
    }
@keyframes animStar{
  from{
    transform: translateY(0px);
}
  to{
    transform: translateY(-#{$starFieldHeight}px) translateX(-#{$starFieldWidth}px);
    }
}
@keyframes animShootingStar{
  from{
    transform: translateY(0px) translateX(0px) rotate(-45deg);
    opacity: 0.9;
    height: 5px;
}
  to{
    transform: translateY(-#{$starFieldHeight}px) translateX(-#{$starFieldWidth}px) rotate(-45deg);
    opacity: 1;
    height: 800px;
  
    }
}